
int lcg_state = 4;

func lcg() int {
	lcg_state *= 65793;
	lcg_state += 4282663;
	return lcg_state % 32768;
}

func wait(int n) {
	loop(n) {
		yield;
	}
}

func waitUntil(int moment) {
	loop {
		if(time()<moment)
		{
			yield;
		}
		else
		{
			break;
		}
	}
}

func waitSeconds(float s) {
	int t_o = time();
	loop {
		float t = (time() - t_o) / 1_000_000f;
		if(t >= s) {
			return;
		}

		yield;
	}
}

func waitUSeconds(int s) {
	int t_o = time();
	loop {
		int t = time() - t_o;
		if(t >= s) {
			return;
		}

		yield;
	}
}

task redGradient(Projectile projectile, float frequency) {
    let r, g, b, i = 0f;
    loop {
        r = psin(frequency * i);
        g = 0.5f;//psin(frequency * i + 2f);
        b = 0.5f;//psin(frequency * i + 4f);
        setProjectileColor(projectile, r, g, b);
        i++;
        yield;
    }
}